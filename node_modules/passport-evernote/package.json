{
  "_args": [
    [
      {
        "raw": "passport-evernote",
        "scope": null,
        "escapedName": "passport-evernote",
        "name": null,
        "rawSpec": "passport-evernote",
        "spec": "/Users/iRhonda/Desktop/projects/node-capstone/passport-evernote",
        "type": "directory"
      },
      "/Users/iRhonda/Desktop/projects/node-capstone"
    ]
  ],
  "_from": "passport-evernote",
  "_id": "passport-evernote@1.0.1",
  "_inCache": true,
  "_location": "/passport-evernote",
  "_phantomChildren": {},
  "_requested": {
    "raw": "passport-evernote",
    "scope": null,
    "escapedName": "passport-evernote",
    "name": null,
    "rawSpec": "passport-evernote",
    "spec": "/Users/iRhonda/Desktop/projects/node-capstone/passport-evernote",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:passport-evernote",
  "_shasum": "55979a1f004d00656b0f0b02917505def41fef5c",
  "_shrinkwrap": null,
  "_spec": "passport-evernote",
  "_where": "/Users/iRhonda/Desktop/projects/node-capstone",
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-evernote/issues"
  },
  "dependencies": {
    "passport-oauth1": "1.x.x"
  },
  "description": "Evernote authentication strategy for Passport.",
  "devDependencies": {
    "chai": "2.x.x",
    "chai-passport-strategy": "1.x.x",
    "make-node": "0.3.x",
    "mocha": "1.x.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "gitHead": "d9f987b161e0c2b74d91e8e1cbae171401b097d7",
  "homepage": "https://github.com/jaredhanson/passport-evernote#readme",
  "keywords": [
    "passport",
    "evernote",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "name": "passport-evernote",
  "optionalDependencies": {},
  "readme": "# passport-evernote\n\n[![Build](https://img.shields.io/travis/jaredhanson/passport-evernote.svg)](https://travis-ci.org/jaredhanson/passport-evernote)\n[![Coverage](https://img.shields.io/coveralls/jaredhanson/passport-evernote.svg)](https://coveralls.io/r/jaredhanson/passport-evernote)\n[![Quality](https://img.shields.io/codeclimate/github/jaredhanson/passport-evernote.svg?label=quality)](https://codeclimate.com/github/jaredhanson/passport-evernote)\n[![Dependencies](https://img.shields.io/david/jaredhanson/passport-evernote.svg)](https://david-dm.org/jaredhanson/passport-evernote)\n\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [Evernote](http://www.evernote.com/) using the OAuth 1.0a API.\n\nThis module lets you authenticate using Evernote in your Node.js applications.\nBy plugging into Passport, Evernote authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-evernote\n\n## Usage\n\n#### Create an Application\n\nBefore using `passport-evernote`, you must first get an Evernote API key. If you\nhave not already done so, an API key can be requested at [Evernote Developers](https://dev.evernote.com/).\nYour will be issued an API key and secret, which need to be provided to the\nstrategy.\n\n#### Configure Strategy\n\nThe Evernote authentication strategy authenticates users using an Evernote\naccount and OAuth tokens.  The API key secret obtained from Evernote are\nsupplied as options when creating the strategy.  The strategy also requires a\n`verify` callback, which receives the access token and corresponding secret as\narguments, as well as `profile` which contains the authenticated user's Evernote\nprofile.   The `verify` callback must call `cb` providing a user to complete\nauthentication.\n\n    passport.use(new EvernoteStrategy({\n        consumerKey: EVERNOTE_CONSUMER_KEY,\n        consumerSecret: EVERNOTE_CONSUMER_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/evernote/callback\"\n      },\n      function(token, tokenSecret, profile, cb) {\n        User.findOrCreate({ evernoteId: profile.id }, function (err, user) {\n          return cb(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'evernote'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/evernote',\n      passport.authenticate('evernote'));\n    \n    app.get('/auth/evernote/callback', \n      passport.authenticate('evernote', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nDevelopers using the popular [Express](http://expressjs.com/) web framework can\nrefer to an [example](https://github.com/passport/express-4.x-evernote-example)\nas a starting point for their own web applications.  The example shows how to\nauthenticate users using Twitter.  However, because both Twitter and Evernote\nuse OAuth 1.0, the code is similar.  Simply replace references to Twitter with\ncorresponding references to Evernote.\n\n## FAQ\n\n##### How do I test against the Evernote sandbox?\n\nSupply the sandbox endpoint URLs as options to the strategy, as follows:\n\n```js\nnew EvernoteStrategy({\n  requestTokenURL: 'https://sandbox.evernote.com/oauth',\n  accessTokenURL: 'https://sandbox.evernote.com/oauth',\n  userAuthorizationURL: 'https://sandbox.evernote.com/OAuth.action',\n  consumerKey: EVERNOTE_CONSUMER_KEY,\n  consumerSecret: EVERNOTE_CONSUMER_SECRET,\n  callbackURL: \"http://127.0.0.1:3000/auth/evernote/callback\"\n}\n```\n\n## Contributing\n\n#### Tests\n\nThe test suite is located in the `test/` directory.  All new features are\nexpected to have corresponding test cases.  Ensure that the complete test suite\npasses by executing:\n\n```bash\n$ make test\n```\n\n#### Coverage\n\nThe test suite covers 100% of the code base.  All new feature development is\nexpected to maintain that level.  Coverage reports can be viewed by executing:\n\n```bash\n$ make test-cov\n$ make view-cov\n```\n\n## Support\n\n#### Funding\n\nThis software is provided to you as open source, free of charge.  The time and\neffort to develop and maintain this project is dedicated by [@jaredhanson](https://github.com/jaredhanson).\nIf you (or your employer) benefit from this project, please consider a financial\ncontribution.  Your contribution helps continue the efforts that produce this\nand other open source software.\n\nFunds are accepted via [PayPal](https://paypal.me/jaredhanson), [Venmo](https://venmo.com/jaredhanson),\nand [other](http://jaredhanson.net/pay) methods.  Any amount is appreciated.\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2016 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-evernote.git"
  },
  "scripts": {
    "test": "mocha --require test/bootstrap/node test/*.test.js"
  },
  "version": "1.0.1"
}
